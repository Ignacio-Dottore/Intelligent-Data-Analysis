, la presencia de valores atípicos.
#Cargamos las librerías
library(readxl)#lectura
library(dplyr) #manipulacion de datos
library(kableExtra) #tablas
library(ggplot2) #graficos
library(tidyverse) #manipulacion de datos
library(ggpubr) #para juntar
library(ggforce) # grafico de violin y jitter
library(GGally) # ggpairs
library(corrplot) # para correlogramas
install.packages(c("readxl", "dplyr", "kableExtra", "ggplot2", "tidyverse", "ggpubr", "ggforce", "GGally", "corrplot"))
install.packages(c("ggneeswarm", "sos", "gridExtra", "reshape2", "modeest", "marittr", "MASS", "moments", "knitr", "fmsb", "psych"))
library(readxl)#lectura
library(dplyr) #manipulacion de datos
library(kableExtra) #tablas
library(ggplot2) #graficos
library(tidyverse) #manipulacion de datos
library(ggpubr) #para juntar
library(ggforce) # grafico de violin y jitter
library(GGally) # ggpairs
library(corrplot) # para correlogramas
library(ggbeeswarm)
library(sos)
library(ggcorrplot)
library(readxl)#lectura
library(dplyr) #manipulacion de datos
library(kableExtra) #tablas
library(ggplot2) #graficos
library(tidyverse) #manipulacion de datos
library(ggpubr) #para juntar
library(ggforce) # grafico de violin y jitter
library(GGally) # ggpairs
library(corrplot) # para correlogramas
library(ggbeeswarm)
library(sos)
library(ggcorrplot)
library(gridExtra)
library(reshape2)
library(modeest)
library(magrittr)
library(MASS)
library(plyr)
library(moments)
library(knitr)
library(fmsb)
library(psych)
library(readxl)#lectura
library(dplyr) #manipulacion de datos
library(kableExtra) #tablas
library(ggplot2) #graficos
library(tidyverse) #manipulacion de datos
library(ggpubr) #para juntar
library(ggforce) # grafico de violin y jitter
library(GGally) # ggpairs
library(corrplot) # para correlogramas
library(ggbeeswarm)
library(sos)
library(ggcorrplot)
library(gridExtra)
library(reshape2)
library(modeest)
library(magrittr)
library(MASS)
library(plyr)
library(moments)
library(knitr)
library(fmsb)
library(psych)
library(ggcorplot)
library(sos)
library(ggcorplot)
library(gridExtra)
library(reshape2)
library(ggcorrplot)
install.packages("ggcorrplot")
library(ggcorrplot)
X <- matrix(c(3,1,1,1,3,1,1,1,5),nrow=3)
X
kable(X) %>% kable_styling(bootstrap_options="striped",full_width=F,position="left")
var_X <- cor(X)
var_X
# Matriz de covarianzas
cov_X <- cov(X)
cov_X
eigen(var_X)$values
eigen(var_X)$vectors
pca <- prcomp(X, scale = TRUE,
center = TRUE, retx = T)
pca
autovalores <- eigen(var_X)$values
autovectores <- eigen(var_X)$vectors
kable(autovalores)
kable(autovectores) %>% kable_styling(bootstrap_options="striped",full_width=F,position="left")
X <- matrix(c(3,1,1,1,3,1,1,1,5),nrow=3,byrow=T)
X
kable(X) %>% kable_styling(bootstrap_options="striped",full_width=F,position="left")
var_X <- cor(X)
var_X
# Matriz de covarianzas
cov_X <- cov(X)
cov_X
autovalores <- eigen(var_X)$values
autovectores <- eigen(var_X)$vectors
kable(autovalores)
kable(autovectores) %>% kable_styling(bootstrap_options="striped",full_width=F,position="left")
X <- matrix(c(3,1,1,1,3,1,1,1,5),nrow=3,byrow=T)
X
kable(X) %>% kable_styling(bootstrap_options="striped",full_width=F,position="left")
var_X <- cor(X)
var_X
# Matriz de covarianzas
cov_X <- cov(X)
cov_X
autovalores <- eigen(var_X)$values
autovectores <- eigen(var_X)$vectors
kable(autovalores)
kable(autovectores) %>% kable_styling(bootstrap_options="striped",full_width=F,position="left")
pca <- prcomp(X, scale = TRUE,
center = TRUE, retx = T)
pca
autovalores <- eigen(X)$values
autovectores <- eigen(X)$vectors
autovalores
autovectores
kable(autovalores)
autovectores
kable(autovalores)
kable(autovectores) %>% kable_styling(bootstrap_options="striped",full_width=F,position="left")
pca <- prcomp(X, scale = TRUE,
center = TRUE, retx = T)
pca
library(ggbeeswarm)
library(sos)
library(gridExtra)
library(reshape2)
library(modeest)
library(magrittr)
library(MASS)
library(ggplot2)
library(GGally)
library(plyr)
library(moments)
library(knitr)
library(fmsb)
library(GGally)
library(dplyr)
library(ggplot2)
library(readxl)
library(psych)
knitr::spin("TP1.R")
recepcionistas <- read_excel("recepcionistas.xls")
promedio_juez1 <- rowMeans(recepcionistas[,2:4])#%>% cat(promedio_juez1,sep="\n")
promedio_juez2 <- rowMeans(recepcionistas[,5:7])#%>% cat(promedio_juez2,sep="\n")
recepcionistas %>%
group_by(candidatos)%>%
summarise(PromJ1 = promedio_juez1,PromJ2 = promedio_juez2)
colnames(test) <- (c('recepcionista','feature','valor'))
promedio_ambos_jueces <- rowMeans(recepcionistas[,2:7])
recepcionistas %>%
group_by(candidatos)%>%
summarise(Promedioambos = promedio_ambos_jueces)
standar1 <- scale(recepcionistas[,2:7])
standar1
standarjuez1 <- scale(promedio_juez1,center=TRUE,scale=TRUE)
standarjuez1
standarjuez2 <- scale(promedio_juez2,center=TRUE,scale=TRUE)
standarjuez2
standardall <- as.data.frame(standarjuez1,standarjuez2)
standardall
plot(standarjuez1)
plot(standarjuez2)
ggparcoord(recepcionistas, columns = (2:7))
internet <- read_excel("Internet2013.xls")
str(internet)
internet_numericas <- internet[,c(2,3,5,7,8,9,10)]
internet_numericas
ggparcoord(internet_numericas, columns = c(2:7),groupColumn="Nacionalidad",showPoints=TRUE)
internet$Sexo=factor(internet$Sexo,levels=c(0,1,2),labels=c("Indef","Masculino","Femenino"))
freq_sexo <- table(internet$Sexo)
freq_sexo
barplot(freq_sexo)
edad_sort <- sort(internet$Edad)
edad_sort
barplot(edad_sort)
library(ggbeeswarm)
library(sos)
library(gridExtra)
library(reshape2)
library(modeest)
library(magrittr)
library(MASS)
library(ggplot2)
library(GGally)
library(plyr)
library(moments)
library(knitr)
library(fmsb)
library(GGally)
library(dplyr)
library(ggplot2)
library(readxl)
library(psych)
knitr::spin("TP1.R")
recepcionistas <- read_excel("recepcionistas.xls")
promedio_juez1 <- rowMeans(recepcionistas[,2:4])#%>% cat(promedio_juez1,sep="\n")
setwd("H:/Mi unidad/AUSTRAL/MATERIAS/ANALISIS INTELIGENTE DE DATOS/PRACTICA/TP 1")
recepcionistas <- read_excel("recepcionistas.xls")
promedio_juez1 <- rowMeans(recepcionistas[,2:4])#%>% cat(promedio_juez1,sep="\n")
promedio_juez2 <- rowMeans(recepcionistas[,5:7])#%>% cat(promedio_juez2,sep="\n")
recepcionistas %>%
group_by(candidatos)%>%
summarise(PromJ1 = promedio_juez1,PromJ2 = promedio_juez2)
colnames(test) <- (c('recepcionista','feature','valor'))
promedio_ambos_jueces <- rowMeans(recepcionistas[,2:7])
recepcionistas %>%
group_by(candidatos)%>%
summarise(Promedioambos = promedio_ambos_jueces)
standar1 <- scale(recepcionistas[,2:7])
standar1
standarjuez1 <- scale(promedio_juez1,center=TRUE,scale=TRUE)
standarjuez1
standarjuez2 <- scale(promedio_juez2,center=TRUE,scale=TRUE)
standarjuez2
standardall <- as.data.frame(standarjuez1,standarjuez2)
standardall
plot(standarjuez1)
plot(standarjuez2)
ggparcoord(recepcionistas, columns = (2:7))
internet <- read_excel("Internet2013.xls")
str(internet)
internet_numericas <- internet[,c(2,3,5,7,8,9,10)]
internet_numericas
ggparcoord(internet_numericas, columns = c(2:7),groupColumn="Nacionalidad",showPoints=TRUE)
internet$Sexo=factor(internet$Sexo,levels=c(0,1,2),labels=c("Indef","Masculino","Femenino"))
freq_sexo <- table(internet$Sexo)
freq_sexo
barplot(freq_sexo)
edad_sort <- sort(internet$Edad)
edad_sort
barplot(edad_sort)
freq_sitio <- table(internet$Sitio)
barplot(freq_sitio)
freq_temp <- table(internet$Temperatura)
barplot(freq_temp)
freq_autos <- table(internet$Autos)
barplot(freq_autos)
freq_ciga <- table(internet$Cigarrillos)
barplot(freq_ciga)
internet2 <- internet[!(internet$Sexo == "0" | internet$Edad < 0 | internet$Sitio == "8"| internet$Sitio == "28" | internet$Edad > 100),]
boxplot(internet2[,3:10])
#' (h) Calcular la desviacion intercuartil y detectar presencia de valores salvajes () moderados y severos.
iqr <-  sapply(internet2[,3:10],IQR)
iqr
gorriones <- read_excel("gorriones.xlsx")
str(gorriones)
#' pajaro    : ordinal
#' largototal: cuantitativa discreta
#' extension : cuantitativa discreta
#' cabeza    : cuantitativa continua
#' humero    : cuantitativa continua
#' esternon  : cuantitativa continua
#' sobrevida : Categorica binaria o logica
#'
gorriones$sobrevida <- factor(gorriones$sobrevida,levels=c(-1,1),labels=c("Muerto","Vivo"))
#' Media, Mediana, Cuartiles
summary(gorriones)
#' Desvio estandar
st_dev <- sapply(gorriones[,2:6],sd)
st_dev
#' Rango intercuartilico
iqr2 <-  sapply(gorriones[,2:6],IQR)
iqr2
cv_fun <- function(x) {
sd(x)/mean(x)*100
}
cv <-  sapply(gorriones[,2:6],cv_fun)
cv
cv_l <- lapply(gorriones[,2:6],cv_fun)
cv_l
mad_gorriones <- sapply(gorriones[,2:6],mad)
mad_gorriones
skew <- sapply(gorriones[,2:6],skewness)
skew
kurt <- sapply(gorriones[,2:6],kurtosis)
kurt
hist_normal <- hist(gorriones$largototal,breaks="FD")
hist_normal
bw <-function(x) {2 * IQR(x) / length(x)^(1/3)}
traza_var2 <- tr(matriz_var2)
traza_var2
traza_cov2 <- tr(matriz_cov2)
traza_cov2
#' EJERCICIO 5 - Matriz de covarianzas
gorriones <- read_excel("gorriones.xlsx")
#' (a) Dimension de la base de datos (n= número de observaciones, p = cantidad de variables observadas sobre cada individuo).
print(paste("El dataset contiene ", toString(dim(gorriones)[1]), " observaciones"))
print(paste("El dataset contiene ", toString(dim(gorriones)[2]-1), " variables"))
#' (b) Hallar el vector de medias, la matriz de varianzas y covarianzas y la matriz de correlaciones. ¿Que caracteristicas tienen estas matrices?
vec_medias <- sapply(gorriones[,2:7], mean)
matriz_var <- var(gorriones[,2:7])
matriz_cov <- cov(gorriones[,2:7])
matriz_cor <- round(cor(gorriones[,2:7]),2)
#' (f) Hallar una nueva variable e incorporarla en la base de Gorriones: Diferencia entre el largo total y el largo del humero.
#' Llamemosla: Diferencia de Largos.
gorriones2 <- gorriones %>%
mutate (diferencia_de_largos = largototal-humero)
gorriones2
#' (g) Calcular nuevamente el vector de medias y las matrices de varianzas y covarianzas y la matriz de correlaciones de la nueva base de datos.
#' Relacionar el nuevo vector de medias con el anterior.
vec_medias2 <-sapply(gorriones2[,2:7], mean)
vec_medias2
matriz_var2 <-var(gorriones2[,2:8])
matriz_var2
matriz_cov2 <-cov(gorriones2[,2:7])
matriz_cov2
matriz_cor2 <-round(cor(gorriones2[,2:8]),2)
matriz_cor2
traza_var2 <- tr(matriz_var2)
traza_var2
traza_cov2 <- tr(matriz_cov2)
traza_cov2
traza_cor2 <- tr(matriz_cor2)
traza_cor2
#' EJERCICIO 6 - Propiedades de la matriz de Covarianzas
recepcionistas2 <- read_excel("recepcionistas.xls")
kable(autovalores)
kable(autovectores) %>% kable_styling(bootstrap_options="striped",full_width=F,position="left")
porc_explicado= 100*autovalores/sum(autovalores)
porc_explicado
kable(porc_explicado) %>% row_spec(1:3,bold = T,color="black")
pca <- prcomp(X, scale = TRUE,
center = TRUE, retx = T)
pca
kable(autovalores)
kable(autovectores) %>% kable_styling(bootstrap_options="striped",full_width=F,position="left")
pca <- prcomp(X, scale = TRUE,
center = TRUE, retx = T)
pca
